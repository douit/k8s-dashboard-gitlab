apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy
    spec:
      containers:
      - args:
        - -provider=gitlab
        - -login-url=##LOGIN_URL##
        - -redeem-url=##REDEEM_URL##
        - -validate-url=##VALIDATE_URL##
        - -email-domain=*
        - -upstream=file:///dev/null
        - -http-address=0.0.0.0:4180
        # Register a new application
        # https://github.com/settings/applications/new
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: ##OAUTH2_PROXY_CLIENT_ID##
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: ##OAUTH2_PROXY_CLIENT_SECRET##
        # python -c 'import os,base64; print base64.b64encode(os.urandom(16))'
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: ##OAUTH2_PROXY_COOKIE_SECRET##
        image: docker.io/colemickens/oauth2_proxy:latest
        imagePullPolicy: Always
        name: oauth2-proxy
        readinessProbe:
          tcpSocket:
            port: 4180
          initialDelaySeconds: 1
          periodSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 4180
          initialDelaySeconds: 15
          periodSeconds: 10
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
        ports:
        - containerPort: 4180
          protocol: TCP
      tolerations:
      - effect: NoExecute
        key: node-role/system
        operator: Exists

---

apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: oauth2-proxy

